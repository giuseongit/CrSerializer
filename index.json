{"repository_name":"github.com/Blacksmoke16/CrSerializer","body":"# CrSerializer\n\nJSON (and later YAML) serializer and validator inspired by [JMS Serializer Annotations](https://jmsyst.com/libs/serializer/master/reference/annotations) and [Symfony Validation Constraint Annotations](https://symfony.com/doc/current/reference/constraints.html).\n\n## Goals\n\n- Be a compliment to, not a replacement for, `JSON::Serializable` or `YAML::Serializable`\n- Extensible and customizable to fit all use cases\n- Make working with JSON APIs in Crystal much easier\n- Be easy to adopt and start using effectively\n- Work out of the box with most ORMs (assuming they are compatible with `JSON::Serializable`/annotations)\n\n## Roadmap\n\n- [x] JSON Support\n  - [x] Basic Constraints\n  - [x] Comparison Constraints\n  - [ ] String Constraints\n  - [ ] Date Constraints\n  - [ ] Collection Constraints\n  - [ ] Financial/Other Constraints\n- [ ] YAML Support\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  CrSerializer:\n    github: Blacksmoke16/CrSerializer\n```\n\n## Usage\n\n```crystal\nrequire \"CrSerializer\"\n\n# Raise an exception if a validation test fails\n@[CrSerializer::Options(raise_on_invalid: true)]\nclass Example\n  include CrSerializer::Json\n\n  property name : String\n  \n  # Validates on deserialization that value is >= 0 AND not nil\n  @[CrSerializer::Assertions::NotNil] \n  @[CrSerializer::Assertions::GreaterThanOrEqual(value: 0)] \n  property age : Int32\n  \n  # Do not inclue password on serialize, nor set it on deserialize\n  @[CrSerializer::Json::Options(expose: false, readonly: true)]\n  property password : String?\nend\n\njson_str = %({\"name\": \"John\", \"age\": 22, \"password\": \"passw0rd!\"})\n\nexample = Example.deserialize json_str\nexample.name # => \"John\"\nexample.age # => 22\n\n# password is nil because it was set to `readonly`\nexample.password # => nil\n\nexample.password = \"passw0rd!\"\n\nexample.password # => \"passw0rd!\"\n\n# password is not serialized because `expose` was set to false\nexample.serialize # => {\"name\":\"John\",\"age\":22}\n\n\njson_str = %({\"name\": \"John\", \"age\": -1, \"password\": \"passw0rd!\"})\n# raises an exepction due to `raise_on_invalid` being true\nexample2 = Example.deserialize json_str # => Unhandled exception: Validation tests failed (CrSerializer::Exceptions::ValidationException)\n```\n\n## Contributing\n\n1. Fork it (<https://github.com/Blacksmoke16/CrSerializer/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Blacksmoke16](https://github.com/Blacksmoke16) Blacksmoke16 - creator, maintainer\n","program":{"html_id":"github.com/Blacksmoke16/CrSerializer/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer","path":"CrSerializer.html","kind":"module","full_name":"CrSerializer","name":"CrSerializer","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"CrSerializer/validator.cr","line_number":1,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/validator.cr"},{"filename":"CrSerializer.cr","line_number":3,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions","path":"CrSerializer/Assertions.html","kind":"module","full_name":"CrSerializer::Assertions","name":"Assertions","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"CrSerializer/assertions/interfaces/assertion.cr","line_number":1,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/assertion.cr"},{"filename":"CrSerializer/assertions/interfaces/basic_assertion.cr","line_number":3,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/basic_assertion.cr"},{"filename":"CrSerializer/assertions/basic/is_blank.cr","line_number":3,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/basic/is_blank.cr"},{"filename":"CrSerializer/assertions/basic/is_false.cr","line_number":3,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/basic/is_false.cr"},{"filename":"CrSerializer/assertions/basic/is_nil.cr","line_number":3,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/basic/is_nil.cr"},{"filename":"CrSerializer/assertions/basic/is_true.cr","line_number":3,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/basic/is_true.cr"},{"filename":"CrSerializer/assertions/basic/not_blank.cr","line_number":3,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/basic/not_blank.cr"},{"filename":"CrSerializer/assertions/basic/not_nil.cr","line_number":3,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/basic/not_nil.cr"},{"filename":"CrSerializer/assertions/interfaces/comparison_assertion.cr","line_number":4,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/comparison_assertion.cr"},{"filename":"CrSerializer/assertions/comparision/equal_to.cr","line_number":3,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/comparision/equal_to.cr"},{"filename":"CrSerializer/assertions/comparision/greater_than.cr","line_number":3,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/comparision/greater_than.cr"},{"filename":"CrSerializer/assertions/comparision/greater_than_or_equal.cr","line_number":3,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/comparision/greater_than_or_equal.cr"},{"filename":"CrSerializer/assertions/interfaces/range_assertion.cr","line_number":4,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/range_assertion.cr"},{"filename":"CrSerializer/assertions/comparision/in_range.cr","line_number":3,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/comparision/in_range.cr"},{"filename":"CrSerializer/assertions/comparision/less_than.cr","line_number":3,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/comparision/less_than.cr"},{"filename":"CrSerializer/assertions/comparision/less_than_or_equal.cr","line_number":3,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/comparision/less_than_or_equal.cr"},{"filename":"CrSerializer/assertions/comparision/not_equal_to.cr","line_number":3,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/comparision/not_equal_to.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"ASSERTIONS","name":"ASSERTIONS","value":"{CrSerializer::Assertions::NotNil => [:noop], CrSerializer::Assertions::IsNil => [:noop], CrSerializer::Assertions::NotBlank => [:noop], CrSerializer::Assertions::IsBlank => [:noop], CrSerializer::Assertions::IsTrue => [:noop], CrSerializer::Assertions::IsFalse => [:noop], CrSerializer::Assertions::EqualTo => [:value, :property_path], CrSerializer::Assertions::NotEqualTo => [:value, :property_path], CrSerializer::Assertions::LessThan => [:value, :property_path], CrSerializer::Assertions::LessThanOrEqual => [:value, :property_path], CrSerializer::Assertions::GreaterThan => [:value, :property_path], CrSerializer::Assertions::GreaterThanOrEqual => [:value, :property_path], CrSerializer::Assertions::InRange => [:range, :min_message, :max_message]}","doc":"Mapping of assertion name to fields used for it\n\nUsed to define annotation classes and keys that should be read off of it","summary":"<p>Mapping of assertion name to fields used for it</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer","kind":"module","full_name":"CrSerializer","name":"CrSerializer"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/Assertion","path":"CrSerializer/Assertions/Assertion.html","kind":"class","full_name":"CrSerializer::Assertions::Assertion","name":"Assertion","abstract":true,"superclass":{"html_id":"github.com/Blacksmoke16/CrSerializer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"CrSerializer/assertions/interfaces/assertion.cr","line_number":35,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/assertion.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/BasicAssertion","kind":"class","full_name":"CrSerializer::Assertions::BasicAssertion(T)","name":"BasicAssertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/ComparisonAssertion","kind":"class","full_name":"CrSerializer::Assertions::ComparisonAssertion(T)","name":"ComparisonAssertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/RangeAssertion","kind":"class","full_name":"CrSerializer::Assertions::RangeAssertion","name":"RangeAssertion"}],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions","kind":"module","full_name":"CrSerializer::Assertions","name":"Assertions"},"doc":"Base class of all assertions\n\nSets the field ivar and message if no message was provided","summary":"<p>Base class of all assertions</p>","class_methods":[],"constructors":[{"id":"new(field:String,message:String?)-class-method","html_id":"new(field:String,message:String?)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"}],"args_string":"(field : String, message : String?)","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/assertion.cr#L39","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/assertion.cr#L39","def":{"name":"new","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(field, message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"message:String-instance-method","html_id":"message:String-instance-method","name":"message","doc":"The message that will be shown if the value is not valid","summary":"<p>The message that will be shown if the value is not valid</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/assertion.cr#L37","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/assertion.cr#L37","def":{"name":"message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@message"}},{"id":"valid?:Bool-instance-method","html_id":"valid?:Bool-instance-method","name":"valid?","doc":"Returns true if the provided value passes the assertion, otherwise false","summary":"<p>Returns true if the provided value passes the assertion, otherwise false</p>","abstract":true,"args":[],"args_string":" : Bool","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/assertion.cr#L44","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/assertion.cr#L44","def":{"name":"valid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/BasicAssertion","path":"CrSerializer/Assertions/BasicAssertion.html","kind":"class","full_name":"CrSerializer::Assertions::BasicAssertion(T)","name":"BasicAssertion","abstract":true,"superclass":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/Assertion","kind":"class","full_name":"CrSerializer::Assertions::Assertion","name":"Assertion"},"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/Assertion","kind":"class","full_name":"CrSerializer::Assertions::Assertion","name":"Assertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"CrSerializer/assertions/interfaces/basic_assertion.cr","line_number":7,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/basic_assertion.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/IsBlankAssertion","kind":"class","full_name":"CrSerializer::Assertions::IsBlankAssertion(ActualValueType)","name":"IsBlankAssertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/IsFalseAssertion","kind":"class","full_name":"CrSerializer::Assertions::IsFalseAssertion(ActualValueType)","name":"IsFalseAssertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/IsNilAssertion","kind":"class","full_name":"CrSerializer::Assertions::IsNilAssertion(ActualValueType)","name":"IsNilAssertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/IsTrueAssertion","kind":"class","full_name":"CrSerializer::Assertions::IsTrueAssertion(ActualValueType)","name":"IsTrueAssertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/NotBlankAssertion","kind":"class","full_name":"CrSerializer::Assertions::NotBlankAssertion(ActualValueType)","name":"NotBlankAssertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/NotNilAssertion","kind":"class","full_name":"CrSerializer::Assertions::NotNilAssertion(ActualValueType)","name":"NotNilAssertion"}],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions","kind":"module","full_name":"CrSerializer::Assertions","name":"Assertions"},"doc":"Base class for the basic assertions\n\nTODO:  Remove the `noop` property once a workaround to [this issue](https://github.com/crystal-lang/crystal/issues/6980) is found.","summary":"<p>Base class for the basic assertions</p>","class_methods":[],"constructors":[{"id":"new(field:String,message:String?,actual:T,noop:Nil=nil)-class-method","html_id":"new(field:String,message:String?,actual:T,noop:Nil=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"T"},{"name":"noop","doc":null,"default_value":"nil","external_name":"noop","restriction":"Nil"}],"args_string":"(field : String, message : String?, actual : T, noop : Nil = <span class=\"n\">nil</span>)","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/basic_assertion.cr#L8","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/basic_assertion.cr#L8","def":{"name":"new","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"T"},{"name":"noop","doc":null,"default_value":"nil","external_name":"noop","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = BasicAssertion(T).allocate\n_.initialize(field, message, actual, noop)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/ComparisonAssertion","path":"CrSerializer/Assertions/ComparisonAssertion.html","kind":"class","full_name":"CrSerializer::Assertions::ComparisonAssertion(T)","name":"ComparisonAssertion","abstract":true,"superclass":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/Assertion","kind":"class","full_name":"CrSerializer::Assertions::Assertion","name":"Assertion"},"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/Assertion","kind":"class","full_name":"CrSerializer::Assertions::Assertion","name":"Assertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"CrSerializer/assertions/interfaces/comparison_assertion.cr","line_number":11,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/comparison_assertion.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/EqualToAssertion","kind":"class","full_name":"CrSerializer::Assertions::EqualToAssertion(ActualValueType)","name":"EqualToAssertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/GreaterThanAssertion","kind":"class","full_name":"CrSerializer::Assertions::GreaterThanAssertion(ActualValueType)","name":"GreaterThanAssertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/LessThanAssertion","kind":"class","full_name":"CrSerializer::Assertions::LessThanAssertion(ActualValueType)","name":"LessThanAssertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/NotEqualToAssertion","kind":"class","full_name":"CrSerializer::Assertions::NotEqualToAssertion(ActualValueType)","name":"NotEqualToAssertion"}],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions","kind":"module","full_name":"CrSerializer::Assertions","name":"Assertions"},"doc":"Base class for the comparison assertions\n\nOptional values:\n```\nproperty_path: {method/variable name} # => Use a property or method to compare this property's value to, instead of hardcoded value\n```","summary":"<p>Base class for the comparison assertions</p>","class_methods":[],"constructors":[{"id":"new(field:String,message:String?,actual:T,value:T=nil,property_path:T=nil)-class-method","html_id":"new(field:String,message:String?,actual:T,value:T=nil,property_path:T=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"T"},{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":"T"},{"name":"property_path","doc":null,"default_value":"nil","external_name":"property_path","restriction":"T"}],"args_string":"(field : String, message : String?, actual : T, value : T = <span class=\"n\">nil</span>, property_path : T = <span class=\"n\">nil</span>)","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/comparison_assertion.cr#L12","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/comparison_assertion.cr#L12","def":{"name":"new","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"T"},{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":"T"},{"name":"property_path","doc":null,"default_value":"nil","external_name":"property_path","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ComparisonAssertion(T).allocate\n_.initialize(field, message, actual, value, property_path)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/EqualToAssertion","path":"CrSerializer/Assertions/EqualToAssertion.html","kind":"class","full_name":"CrSerializer::Assertions::EqualToAssertion(ActualValueType)","name":"EqualToAssertion","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/ComparisonAssertion","kind":"class","full_name":"CrSerializer::Assertions::ComparisonAssertion","name":"ComparisonAssertion"},"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/ComparisonAssertion","kind":"class","full_name":"CrSerializer::Assertions::ComparisonAssertion","name":"ComparisonAssertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/Assertion","kind":"class","full_name":"CrSerializer::Assertions::Assertion","name":"Assertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"CrSerializer/assertions/comparision/equal_to.cr","line_number":14,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/comparision/equal_to.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions","kind":"module","full_name":"CrSerializer::Assertions","name":"Assertions"},"doc":"Validates a property is equal to a value\n\nUsable on all data types\n\n```\n@[CrSerializer::Assertions::EqualTo(value: 7)]\nproperty age : Int64\n```\n\nNOTE: For nil assertion see `IsNilAssertion`","summary":"<p>Validates a property is equal to a value</p>","class_methods":[],"constructors":[{"id":"new(field:String,message:String?,actual:T|T|T|T|T|T|T|T|T|T|T|T|T|T|T,value:T|T|T|T|T|T|T|T|T|T|T|T|T|T|T=nil,property_path:T|T|T|T|T|T|T|T|T|T|T|T|T|T|T=nil)-class-method","html_id":"new(field:String,message:String?,actual:T|T|T|T|T|T|T|T|T|T|T|T|T|T|T,value:T|T|T|T|T|T|T|T|T|T|T|T|T|T|T=nil,property_path:T|T|T|T|T|T|T|T|T|T|T|T|T|T|T=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"T"},{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":"T"},{"name":"property_path","doc":null,"default_value":"nil","external_name":"property_path","restriction":"T"}],"args_string":"(field : String, message : String?, actual : T | T | T | T | T | T | T | T | T | T | T | T | T | T | T, value : T | T | T | T | T | T | T | T | T | T | T | T | T | T | T = <span class=\"n\">nil</span>, property_path : T | T | T | T | T | T | T | T | T | T | T | T | T | T | T = <span class=\"n\">nil</span>)","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/comparison_assertion.cr#L12","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/comparison_assertion.cr#L12","def":{"name":"new","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"T"},{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":"T"},{"name":"property_path","doc":null,"default_value":"nil","external_name":"property_path","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = EqualToAssertion(ActualValueType).allocate\n_.initialize(field, message, actual, value, property_path)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"valid?:Bool-instance-method","html_id":"valid?:Bool-instance-method","name":"valid?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/comparision/equal_to.cr#L15","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/comparision/equal_to.cr#L15","def":{"name":"valid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@actual == @value"}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/GreaterThanAssertion","path":"CrSerializer/Assertions/GreaterThanAssertion.html","kind":"class","full_name":"CrSerializer::Assertions::GreaterThanAssertion(ActualValueType)","name":"GreaterThanAssertion","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/ComparisonAssertion","kind":"class","full_name":"CrSerializer::Assertions::ComparisonAssertion","name":"ComparisonAssertion"},"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/ComparisonAssertion","kind":"class","full_name":"CrSerializer::Assertions::ComparisonAssertion","name":"ComparisonAssertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/Assertion","kind":"class","full_name":"CrSerializer::Assertions::Assertion","name":"Assertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"CrSerializer/assertions/comparision/greater_than.cr","line_number":14,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/comparision/greater_than.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/GreaterThanOrEqualAssertion","kind":"class","full_name":"CrSerializer::Assertions::GreaterThanOrEqualAssertion(ActualValueType)","name":"GreaterThanOrEqualAssertion"}],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions","kind":"module","full_name":"CrSerializer::Assertions","name":"Assertions"},"doc":"Validates a property is greater than a value\n\nUsable on only Number properties\n\n```\n@[CrSerializer::Assertions::GreaterThan(value: 100)]\nproperty age : Int64\n```\n\nNOTE: Nil values are considered valid","summary":"<p>Validates a property is greater than a value</p>","class_methods":[],"constructors":[{"id":"new(field:String,message:String?,actual:T|T|T|T|T|T|T|T|T|T|T|T|T,value:T|T|T|T|T|T|T|T|T|T|T|T|T=nil,property_path:T|T|T|T|T|T|T|T|T|T|T|T|T=nil)-class-method","html_id":"new(field:String,message:String?,actual:T|T|T|T|T|T|T|T|T|T|T|T|T,value:T|T|T|T|T|T|T|T|T|T|T|T|T=nil,property_path:T|T|T|T|T|T|T|T|T|T|T|T|T=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"T"},{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":"T"},{"name":"property_path","doc":null,"default_value":"nil","external_name":"property_path","restriction":"T"}],"args_string":"(field : String, message : String?, actual : T | T | T | T | T | T | T | T | T | T | T | T | T, value : T | T | T | T | T | T | T | T | T | T | T | T | T = <span class=\"n\">nil</span>, property_path : T | T | T | T | T | T | T | T | T | T | T | T | T = <span class=\"n\">nil</span>)","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/comparison_assertion.cr#L12","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/comparison_assertion.cr#L12","def":{"name":"new","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"T"},{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":"T"},{"name":"property_path","doc":null,"default_value":"nil","external_name":"property_path","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = GreaterThanAssertion(ActualValueType).allocate\n_.initialize(field, message, actual, value, property_path)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"valid?:Bool-instance-method","html_id":"valid?:Bool-instance-method","name":"valid?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/comparision/greater_than.cr#L15","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/comparision/greater_than.cr#L15","def":{"name":"valid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"val, act = @value, @actual\nif val && act\nelse\n  return true\nend\nact > val\n"}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/GreaterThanOrEqualAssertion","path":"CrSerializer/Assertions/GreaterThanOrEqualAssertion.html","kind":"class","full_name":"CrSerializer::Assertions::GreaterThanOrEqualAssertion(ActualValueType)","name":"GreaterThanOrEqualAssertion","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/GreaterThanAssertion","kind":"class","full_name":"CrSerializer::Assertions::GreaterThanAssertion","name":"GreaterThanAssertion"},"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/GreaterThanAssertion","kind":"class","full_name":"CrSerializer::Assertions::GreaterThanAssertion","name":"GreaterThanAssertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/ComparisonAssertion","kind":"class","full_name":"CrSerializer::Assertions::ComparisonAssertion","name":"ComparisonAssertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/Assertion","kind":"class","full_name":"CrSerializer::Assertions::Assertion","name":"Assertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"CrSerializer/assertions/comparision/greater_than_or_equal.cr","line_number":14,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/comparision/greater_than_or_equal.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions","kind":"module","full_name":"CrSerializer::Assertions","name":"Assertions"},"doc":"Validates a property is greater than or equal to a value\n\nUsable on only Number properties\n\n```\n@[CrSerializer::Assertions::GreaterThanOrEqual(value: 100)]\nproperty age : Int64\n```\n\nNOTE: Nil values are considered valid","summary":"<p>Validates a property is greater than or equal to a value</p>","class_methods":[],"constructors":[{"id":"new(field:String,message:String?,actual:T|T|T|T|T|T|T|T|T|T|T|T|T,value:T|T|T|T|T|T|T|T|T|T|T|T|T=nil,property_path:T|T|T|T|T|T|T|T|T|T|T|T|T=nil)-class-method","html_id":"new(field:String,message:String?,actual:T|T|T|T|T|T|T|T|T|T|T|T|T,value:T|T|T|T|T|T|T|T|T|T|T|T|T=nil,property_path:T|T|T|T|T|T|T|T|T|T|T|T|T=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"T"},{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":"T"},{"name":"property_path","doc":null,"default_value":"nil","external_name":"property_path","restriction":"T"}],"args_string":"(field : String, message : String?, actual : T | T | T | T | T | T | T | T | T | T | T | T | T, value : T | T | T | T | T | T | T | T | T | T | T | T | T = <span class=\"n\">nil</span>, property_path : T | T | T | T | T | T | T | T | T | T | T | T | T = <span class=\"n\">nil</span>)","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/comparison_assertion.cr#L12","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/comparison_assertion.cr#L12","def":{"name":"new","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"T"},{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":"T"},{"name":"property_path","doc":null,"default_value":"nil","external_name":"property_path","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = GreaterThanOrEqualAssertion(ActualValueType).allocate\n_.initialize(field, message, actual, value, property_path)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"valid?:Bool-instance-method","html_id":"valid?:Bool-instance-method","name":"valid?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/comparision/greater_than_or_equal.cr#L15","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/comparision/greater_than_or_equal.cr#L15","def":{"name":"valid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"val, act = @value, @actual\nif val && act\nelse\n  return true\nend\nact >= val\n"}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/InRangeAssertion","path":"CrSerializer/Assertions/InRangeAssertion.html","kind":"class","full_name":"CrSerializer::Assertions::InRangeAssertion(T)","name":"InRangeAssertion","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/RangeAssertion","kind":"class","full_name":"CrSerializer::Assertions::RangeAssertion","name":"RangeAssertion"},"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/RangeAssertion","kind":"class","full_name":"CrSerializer::Assertions::RangeAssertion","name":"RangeAssertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/Assertion","kind":"class","full_name":"CrSerializer::Assertions::Assertion","name":"Assertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"CrSerializer/assertions/comparision/in_range.cr","line_number":15,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/comparision/in_range.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions","kind":"module","full_name":"CrSerializer::Assertions","name":"Assertions"},"doc":"Validates a property is within a given range\n\nUsable on only Number properties\n\n```\n@[CrSerializer::Assertions::EqualTo(range: 0_f64..100_f64)]\nproperty age : Int64\n```\n\nNOTE: Nil values are considered valid\nNOTE: range must be of type `Range(Float64, Float64)`","summary":"<p>Validates a property is within a given range</p>","class_methods":[],"constructors":[{"id":"new(field:String,message:String?,actual:NUMERIC_DATA_TYPES?,range:Range(Float64,Float64),min_message:String?,max_message:String?)-class-method","html_id":"new(field:String,message:String?,actual:NUMERIC_DATA_TYPES?,range:Range(Float64,Float64),min_message:String?,max_message:String?)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"NUMERIC_DATA_TYPES | ::Nil"},{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(Float64, Float64)"},{"name":"min_message","doc":null,"default_value":"","external_name":"min_message","restriction":"String | ::Nil"},{"name":"max_message","doc":null,"default_value":"","external_name":"max_message","restriction":"String | ::Nil"}],"args_string":"(field : String, message : String?, actual : NUMERIC_DATA_TYPES?, range : Range(Float64, Float64), min_message : String?, max_message : String?)","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/range_assertion.cr#L13","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/range_assertion.cr#L13","def":{"name":"new","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"NUMERIC_DATA_TYPES | ::Nil"},{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(Float64, Float64)"},{"name":"min_message","doc":null,"default_value":"","external_name":"min_message","restriction":"String | ::Nil"},{"name":"max_message","doc":null,"default_value":"","external_name":"max_message","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = InRangeAssertion(T).allocate\n_.initialize(field, message, actual, range, min_message, max_message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"valid?:Bool-instance-method","html_id":"valid?:Bool-instance-method","name":"valid?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/comparision/in_range.cr#L16","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/comparision/in_range.cr#L16","def":{"name":"valid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"act : NUMERIC_DATA_TYPES | ::Nil = @actual\nmin_message : String | ::Nil = @min_message\nmax_message : String | ::Nil = @max_message\nif act\nelse\n  return true\nend\nif @range === act\n  return true\nend\nif min_message || max_message\nelse\n  return false\nend\nexclusive : Bool = @range.excludes_end?\nis_high : Bool = exclusive ? act > @range.end : act >= @range.end\nif is_high && max_message\n  @message = max_message\nelse\n  if (!is_high) && min_message\n    @message = min_message\n  end\nend\nfalse\n"}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/IsBlankAssertion","path":"CrSerializer/Assertions/IsBlankAssertion.html","kind":"class","full_name":"CrSerializer::Assertions::IsBlankAssertion(ActualValueType)","name":"IsBlankAssertion","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/BasicAssertion","kind":"class","full_name":"CrSerializer::Assertions::BasicAssertion","name":"BasicAssertion"},"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/BasicAssertion","kind":"class","full_name":"CrSerializer::Assertions::BasicAssertion","name":"BasicAssertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/Assertion","kind":"class","full_name":"CrSerializer::Assertions::Assertion","name":"Assertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"CrSerializer/assertions/basic/is_blank.cr","line_number":12,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/basic/is_blank.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions","kind":"module","full_name":"CrSerializer::Assertions","name":"Assertions"},"doc":"Validates a property is blank\n\nUsable on only String properties\n\n```\n@[CrSerializer::Assertions::IsBlank]\nproperty name : String\n```","summary":"<p>Validates a property is blank</p>","class_methods":[],"constructors":[{"id":"new(field:String,message:String?,actual:T,noop:Nil=nil)-class-method","html_id":"new(field:String,message:String?,actual:T,noop:Nil=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"T"},{"name":"noop","doc":null,"default_value":"nil","external_name":"noop","restriction":"Nil"}],"args_string":"(field : String, message : String?, actual : T, noop : Nil = <span class=\"n\">nil</span>)","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/basic_assertion.cr#L8","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/basic_assertion.cr#L8","def":{"name":"new","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"T"},{"name":"noop","doc":null,"default_value":"nil","external_name":"noop","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = IsBlankAssertion(ActualValueType).allocate\n_.initialize(field, message, actual, noop)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"valid?:Bool-instance-method","html_id":"valid?:Bool-instance-method","name":"valid?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/basic/is_blank.cr#L13","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/basic/is_blank.cr#L13","def":{"name":"valid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@actual.blank? == true"}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/IsFalseAssertion","path":"CrSerializer/Assertions/IsFalseAssertion.html","kind":"class","full_name":"CrSerializer::Assertions::IsFalseAssertion(ActualValueType)","name":"IsFalseAssertion","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/BasicAssertion","kind":"class","full_name":"CrSerializer::Assertions::BasicAssertion","name":"BasicAssertion"},"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/BasicAssertion","kind":"class","full_name":"CrSerializer::Assertions::BasicAssertion","name":"BasicAssertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/Assertion","kind":"class","full_name":"CrSerializer::Assertions::Assertion","name":"Assertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"CrSerializer/assertions/basic/is_false.cr","line_number":12,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/basic/is_false.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions","kind":"module","full_name":"CrSerializer::Assertions","name":"Assertions"},"doc":"Validates a property is false\n\nUsable on only Bool properties\n\n```\n@[CrSerializer::Assertions::IsFalse]\nproperty is_attending : Bool\n```","summary":"<p>Validates a property is false</p>","class_methods":[],"constructors":[{"id":"new(field:String,message:String?,actual:T,noop:Nil=nil)-class-method","html_id":"new(field:String,message:String?,actual:T,noop:Nil=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"T"},{"name":"noop","doc":null,"default_value":"nil","external_name":"noop","restriction":"Nil"}],"args_string":"(field : String, message : String?, actual : T, noop : Nil = <span class=\"n\">nil</span>)","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/basic_assertion.cr#L8","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/basic_assertion.cr#L8","def":{"name":"new","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"T"},{"name":"noop","doc":null,"default_value":"nil","external_name":"noop","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = IsFalseAssertion(ActualValueType).allocate\n_.initialize(field, message, actual, noop)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"valid?:Bool-instance-method","html_id":"valid?:Bool-instance-method","name":"valid?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/basic/is_false.cr#L13","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/basic/is_false.cr#L13","def":{"name":"valid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@actual == false"}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/IsNilAssertion","path":"CrSerializer/Assertions/IsNilAssertion.html","kind":"class","full_name":"CrSerializer::Assertions::IsNilAssertion(ActualValueType)","name":"IsNilAssertion","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/BasicAssertion","kind":"class","full_name":"CrSerializer::Assertions::BasicAssertion","name":"BasicAssertion"},"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/BasicAssertion","kind":"class","full_name":"CrSerializer::Assertions::BasicAssertion","name":"BasicAssertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/Assertion","kind":"class","full_name":"CrSerializer::Assertions::Assertion","name":"Assertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"CrSerializer/assertions/basic/is_nil.cr","line_number":12,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/basic/is_nil.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions","kind":"module","full_name":"CrSerializer::Assertions","name":"Assertions"},"doc":"Validates a property is nil\n\nUsable on all data types\n\n```\n@[CrSerializer::Assertions::IsNil]\nproperty name : String\n```","summary":"<p>Validates a property is nil</p>","class_methods":[],"constructors":[{"id":"new(field:String,message:String?,actual:T|T|T|T|T|T|T|T|T|T|T|T|T|T|T,noop:Nil=nil)-class-method","html_id":"new(field:String,message:String?,actual:T|T|T|T|T|T|T|T|T|T|T|T|T|T|T,noop:Nil=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"T"},{"name":"noop","doc":null,"default_value":"nil","external_name":"noop","restriction":"Nil"}],"args_string":"(field : String, message : String?, actual : T | T | T | T | T | T | T | T | T | T | T | T | T | T | T, noop : Nil = <span class=\"n\">nil</span>)","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/basic_assertion.cr#L8","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/basic_assertion.cr#L8","def":{"name":"new","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"T"},{"name":"noop","doc":null,"default_value":"nil","external_name":"noop","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = IsNilAssertion(ActualValueType).allocate\n_.initialize(field, message, actual, noop)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"valid?:Bool-instance-method","html_id":"valid?:Bool-instance-method","name":"valid?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/basic/is_nil.cr#L13","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/basic/is_nil.cr#L13","def":{"name":"valid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@actual.nil? == true"}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/IsTrueAssertion","path":"CrSerializer/Assertions/IsTrueAssertion.html","kind":"class","full_name":"CrSerializer::Assertions::IsTrueAssertion(ActualValueType)","name":"IsTrueAssertion","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/BasicAssertion","kind":"class","full_name":"CrSerializer::Assertions::BasicAssertion","name":"BasicAssertion"},"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/BasicAssertion","kind":"class","full_name":"CrSerializer::Assertions::BasicAssertion","name":"BasicAssertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/Assertion","kind":"class","full_name":"CrSerializer::Assertions::Assertion","name":"Assertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"CrSerializer/assertions/basic/is_true.cr","line_number":12,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/basic/is_true.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions","kind":"module","full_name":"CrSerializer::Assertions","name":"Assertions"},"doc":"Validates a property is true\n\nUsable on only Bool properties\n\n```\n@[CrSerializer::Assertions::IsTrue]\nproperty is_attending : Bool\n```","summary":"<p>Validates a property is true</p>","class_methods":[],"constructors":[{"id":"new(field:String,message:String?,actual:T,noop:Nil=nil)-class-method","html_id":"new(field:String,message:String?,actual:T,noop:Nil=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"T"},{"name":"noop","doc":null,"default_value":"nil","external_name":"noop","restriction":"Nil"}],"args_string":"(field : String, message : String?, actual : T, noop : Nil = <span class=\"n\">nil</span>)","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/basic_assertion.cr#L8","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/basic_assertion.cr#L8","def":{"name":"new","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"T"},{"name":"noop","doc":null,"default_value":"nil","external_name":"noop","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = IsTrueAssertion(ActualValueType).allocate\n_.initialize(field, message, actual, noop)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"valid?:Bool-instance-method","html_id":"valid?:Bool-instance-method","name":"valid?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/basic/is_true.cr#L13","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/basic/is_true.cr#L13","def":{"name":"valid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@actual == true"}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/LessThanAssertion","path":"CrSerializer/Assertions/LessThanAssertion.html","kind":"class","full_name":"CrSerializer::Assertions::LessThanAssertion(ActualValueType)","name":"LessThanAssertion","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/ComparisonAssertion","kind":"class","full_name":"CrSerializer::Assertions::ComparisonAssertion","name":"ComparisonAssertion"},"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/ComparisonAssertion","kind":"class","full_name":"CrSerializer::Assertions::ComparisonAssertion","name":"ComparisonAssertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/Assertion","kind":"class","full_name":"CrSerializer::Assertions::Assertion","name":"Assertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"CrSerializer/assertions/comparision/less_than.cr","line_number":14,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/comparision/less_than.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/LessThanOrEqualAssertion","kind":"class","full_name":"CrSerializer::Assertions::LessThanOrEqualAssertion(ActualValueType)","name":"LessThanOrEqualAssertion"}],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions","kind":"module","full_name":"CrSerializer::Assertions","name":"Assertions"},"doc":"Validates a property is less than a value\n\nUsable on only Number properties\n\n```\n@[CrSerializer::Assertions::LessThan(value: 100)]\nproperty age : Int64\n```\n\nNOTE: Nil values are considered valid","summary":"<p>Validates a property is less than a value</p>","class_methods":[],"constructors":[{"id":"new(field:String,message:String?,actual:T|T|T|T|T|T|T|T|T|T|T|T|T,value:T|T|T|T|T|T|T|T|T|T|T|T|T=nil,property_path:T|T|T|T|T|T|T|T|T|T|T|T|T=nil)-class-method","html_id":"new(field:String,message:String?,actual:T|T|T|T|T|T|T|T|T|T|T|T|T,value:T|T|T|T|T|T|T|T|T|T|T|T|T=nil,property_path:T|T|T|T|T|T|T|T|T|T|T|T|T=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"T"},{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":"T"},{"name":"property_path","doc":null,"default_value":"nil","external_name":"property_path","restriction":"T"}],"args_string":"(field : String, message : String?, actual : T | T | T | T | T | T | T | T | T | T | T | T | T, value : T | T | T | T | T | T | T | T | T | T | T | T | T = <span class=\"n\">nil</span>, property_path : T | T | T | T | T | T | T | T | T | T | T | T | T = <span class=\"n\">nil</span>)","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/comparison_assertion.cr#L12","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/comparison_assertion.cr#L12","def":{"name":"new","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"T"},{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":"T"},{"name":"property_path","doc":null,"default_value":"nil","external_name":"property_path","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = LessThanAssertion(ActualValueType).allocate\n_.initialize(field, message, actual, value, property_path)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"valid?:Bool-instance-method","html_id":"valid?:Bool-instance-method","name":"valid?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/comparision/less_than.cr#L15","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/comparision/less_than.cr#L15","def":{"name":"valid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"val, act = @value, @actual\nif val && act\nelse\n  return true\nend\nact < val\n"}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/LessThanOrEqualAssertion","path":"CrSerializer/Assertions/LessThanOrEqualAssertion.html","kind":"class","full_name":"CrSerializer::Assertions::LessThanOrEqualAssertion(ActualValueType)","name":"LessThanOrEqualAssertion","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/LessThanAssertion","kind":"class","full_name":"CrSerializer::Assertions::LessThanAssertion","name":"LessThanAssertion"},"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/LessThanAssertion","kind":"class","full_name":"CrSerializer::Assertions::LessThanAssertion","name":"LessThanAssertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/ComparisonAssertion","kind":"class","full_name":"CrSerializer::Assertions::ComparisonAssertion","name":"ComparisonAssertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/Assertion","kind":"class","full_name":"CrSerializer::Assertions::Assertion","name":"Assertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"CrSerializer/assertions/comparision/less_than_or_equal.cr","line_number":14,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/comparision/less_than_or_equal.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions","kind":"module","full_name":"CrSerializer::Assertions","name":"Assertions"},"doc":"Validates a property is less than or equal to a value\n\nUsable on only Number properties\n\n```\n@[CrSerializer::Assertions::LessThanOrEqual(value: 100)]\nproperty age : Int64\n```\n\nNOTE: Nil values are considered valid","summary":"<p>Validates a property is less than or equal to a value</p>","class_methods":[],"constructors":[{"id":"new(field:String,message:String?,actual:T|T|T|T|T|T|T|T|T|T|T|T|T,value:T|T|T|T|T|T|T|T|T|T|T|T|T=nil,property_path:T|T|T|T|T|T|T|T|T|T|T|T|T=nil)-class-method","html_id":"new(field:String,message:String?,actual:T|T|T|T|T|T|T|T|T|T|T|T|T,value:T|T|T|T|T|T|T|T|T|T|T|T|T=nil,property_path:T|T|T|T|T|T|T|T|T|T|T|T|T=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"T"},{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":"T"},{"name":"property_path","doc":null,"default_value":"nil","external_name":"property_path","restriction":"T"}],"args_string":"(field : String, message : String?, actual : T | T | T | T | T | T | T | T | T | T | T | T | T, value : T | T | T | T | T | T | T | T | T | T | T | T | T = <span class=\"n\">nil</span>, property_path : T | T | T | T | T | T | T | T | T | T | T | T | T = <span class=\"n\">nil</span>)","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/comparison_assertion.cr#L12","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/comparison_assertion.cr#L12","def":{"name":"new","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"T"},{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":"T"},{"name":"property_path","doc":null,"default_value":"nil","external_name":"property_path","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = LessThanOrEqualAssertion(ActualValueType).allocate\n_.initialize(field, message, actual, value, property_path)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"valid?:Bool-instance-method","html_id":"valid?:Bool-instance-method","name":"valid?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/comparision/less_than_or_equal.cr#L15","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/comparision/less_than_or_equal.cr#L15","def":{"name":"valid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"val, act = @value, @actual\nif val && act\nelse\n  return true\nend\nact <= val\n"}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/NotBlankAssertion","path":"CrSerializer/Assertions/NotBlankAssertion.html","kind":"class","full_name":"CrSerializer::Assertions::NotBlankAssertion(ActualValueType)","name":"NotBlankAssertion","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/BasicAssertion","kind":"class","full_name":"CrSerializer::Assertions::BasicAssertion","name":"BasicAssertion"},"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/BasicAssertion","kind":"class","full_name":"CrSerializer::Assertions::BasicAssertion","name":"BasicAssertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/Assertion","kind":"class","full_name":"CrSerializer::Assertions::Assertion","name":"Assertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"CrSerializer/assertions/basic/not_blank.cr","line_number":12,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/basic/not_blank.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions","kind":"module","full_name":"CrSerializer::Assertions","name":"Assertions"},"doc":"Validates a property is not blank\n\nUsable on only String properties\n\n```\n@[CrSerializer::Assertions::NotBlank]\nproperty name : String\n```","summary":"<p>Validates a property is not blank</p>","class_methods":[],"constructors":[{"id":"new(field:String,message:String?,actual:T,noop:Nil=nil)-class-method","html_id":"new(field:String,message:String?,actual:T,noop:Nil=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"T"},{"name":"noop","doc":null,"default_value":"nil","external_name":"noop","restriction":"Nil"}],"args_string":"(field : String, message : String?, actual : T, noop : Nil = <span class=\"n\">nil</span>)","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/basic_assertion.cr#L8","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/basic_assertion.cr#L8","def":{"name":"new","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"T"},{"name":"noop","doc":null,"default_value":"nil","external_name":"noop","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = NotBlankAssertion(ActualValueType).allocate\n_.initialize(field, message, actual, noop)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"valid?:Bool-instance-method","html_id":"valid?:Bool-instance-method","name":"valid?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/basic/not_blank.cr#L13","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/basic/not_blank.cr#L13","def":{"name":"valid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@actual.blank? == false"}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/NotEqualToAssertion","path":"CrSerializer/Assertions/NotEqualToAssertion.html","kind":"class","full_name":"CrSerializer::Assertions::NotEqualToAssertion(ActualValueType)","name":"NotEqualToAssertion","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/ComparisonAssertion","kind":"class","full_name":"CrSerializer::Assertions::ComparisonAssertion","name":"ComparisonAssertion"},"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/ComparisonAssertion","kind":"class","full_name":"CrSerializer::Assertions::ComparisonAssertion","name":"ComparisonAssertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/Assertion","kind":"class","full_name":"CrSerializer::Assertions::Assertion","name":"Assertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"CrSerializer/assertions/comparision/not_equal_to.cr","line_number":14,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/comparision/not_equal_to.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions","kind":"module","full_name":"CrSerializer::Assertions","name":"Assertions"},"doc":"Validates a property is not equal to a value\n\nUsable on all data types\n\n```\n@[CrSerializer::Assertions::NotNotEqualTo(value: \"Fred\")]\nproperty first_name : String\n```\n\nNOTE: For not nil assertion see `NotNilAssertion`","summary":"<p>Validates a property is not equal to a value</p>","class_methods":[],"constructors":[{"id":"new(field:String,message:String?,actual:T|T|T|T|T|T|T|T|T|T|T|T|T|T|T,value:T|T|T|T|T|T|T|T|T|T|T|T|T|T|T=nil,property_path:T|T|T|T|T|T|T|T|T|T|T|T|T|T|T=nil)-class-method","html_id":"new(field:String,message:String?,actual:T|T|T|T|T|T|T|T|T|T|T|T|T|T|T,value:T|T|T|T|T|T|T|T|T|T|T|T|T|T|T=nil,property_path:T|T|T|T|T|T|T|T|T|T|T|T|T|T|T=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"T"},{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":"T"},{"name":"property_path","doc":null,"default_value":"nil","external_name":"property_path","restriction":"T"}],"args_string":"(field : String, message : String?, actual : T | T | T | T | T | T | T | T | T | T | T | T | T | T | T, value : T | T | T | T | T | T | T | T | T | T | T | T | T | T | T = <span class=\"n\">nil</span>, property_path : T | T | T | T | T | T | T | T | T | T | T | T | T | T | T = <span class=\"n\">nil</span>)","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/comparison_assertion.cr#L12","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/comparison_assertion.cr#L12","def":{"name":"new","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"T"},{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":"T"},{"name":"property_path","doc":null,"default_value":"nil","external_name":"property_path","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = NotEqualToAssertion(ActualValueType).allocate\n_.initialize(field, message, actual, value, property_path)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"valid?:Bool-instance-method","html_id":"valid?:Bool-instance-method","name":"valid?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/comparision/not_equal_to.cr#L15","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/comparision/not_equal_to.cr#L15","def":{"name":"valid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@actual != @value"}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/NotNilAssertion","path":"CrSerializer/Assertions/NotNilAssertion.html","kind":"class","full_name":"CrSerializer::Assertions::NotNilAssertion(ActualValueType)","name":"NotNilAssertion","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/BasicAssertion","kind":"class","full_name":"CrSerializer::Assertions::BasicAssertion","name":"BasicAssertion"},"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/BasicAssertion","kind":"class","full_name":"CrSerializer::Assertions::BasicAssertion","name":"BasicAssertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/Assertion","kind":"class","full_name":"CrSerializer::Assertions::Assertion","name":"Assertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"CrSerializer/assertions/basic/not_nil.cr","line_number":12,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/basic/not_nil.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions","kind":"module","full_name":"CrSerializer::Assertions","name":"Assertions"},"doc":"Validates a property is not nil\n\nUsable on all data types\n\n```\n@[CrSerializer::Assertions::NotNil]\nproperty name : String\n```","summary":"<p>Validates a property is not nil</p>","class_methods":[],"constructors":[{"id":"new(field:String,message:String?,actual:T|T|T|T|T|T|T|T|T|T|T|T|T|T|T,noop:Nil=nil)-class-method","html_id":"new(field:String,message:String?,actual:T|T|T|T|T|T|T|T|T|T|T|T|T|T|T,noop:Nil=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"T"},{"name":"noop","doc":null,"default_value":"nil","external_name":"noop","restriction":"Nil"}],"args_string":"(field : String, message : String?, actual : T | T | T | T | T | T | T | T | T | T | T | T | T | T | T, noop : Nil = <span class=\"n\">nil</span>)","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/basic_assertion.cr#L8","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/basic_assertion.cr#L8","def":{"name":"new","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"T"},{"name":"noop","doc":null,"default_value":"nil","external_name":"noop","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = NotNilAssertion(ActualValueType).allocate\n_.initialize(field, message, actual, noop)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"valid?:Bool-instance-method","html_id":"valid?:Bool-instance-method","name":"valid?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/basic/not_nil.cr#L13","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/basic/not_nil.cr#L13","def":{"name":"valid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@actual.nil? == false"}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/RangeAssertion","path":"CrSerializer/Assertions/RangeAssertion.html","kind":"class","full_name":"CrSerializer::Assertions::RangeAssertion","name":"RangeAssertion","abstract":true,"superclass":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/Assertion","kind":"class","full_name":"CrSerializer::Assertions::Assertion","name":"Assertion"},"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/Assertion","kind":"class","full_name":"CrSerializer::Assertions::Assertion","name":"Assertion"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"CrSerializer/assertions/interfaces/range_assertion.cr","line_number":12,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/range_assertion.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions/InRangeAssertion","kind":"class","full_name":"CrSerializer::Assertions::InRangeAssertion(T)","name":"InRangeAssertion"}],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Assertions","kind":"module","full_name":"CrSerializer::Assertions","name":"Assertions"},"doc":"Base class for the comparison assertions\n\nOptional values:\n```\nmin_message : String # => Message to display if the value is too small\nmax_message : String # => Message to display if the value is too big\n```","summary":"<p>Base class for the comparison assertions</p>","class_methods":[],"constructors":[{"id":"new(field:String,message:String?,actual:NUMERIC_DATA_TYPES?,range:Range(Float64,Float64),min_message:String?,max_message:String?)-class-method","html_id":"new(field:String,message:String?,actual:NUMERIC_DATA_TYPES?,range:Range(Float64,Float64),min_message:String?,max_message:String?)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"NUMERIC_DATA_TYPES | ::Nil"},{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(Float64, Float64)"},{"name":"min_message","doc":null,"default_value":"","external_name":"min_message","restriction":"String | ::Nil"},{"name":"max_message","doc":null,"default_value":"","external_name":"max_message","restriction":"String | ::Nil"}],"args_string":"(field : String, message : String?, actual : NUMERIC_DATA_TYPES?, range : Range(Float64, Float64), min_message : String?, max_message : String?)","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/range_assertion.cr#L13","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/assertions/interfaces/range_assertion.cr#L13","def":{"name":"new","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String | ::Nil"},{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"NUMERIC_DATA_TYPES | ::Nil"},{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(Float64, Float64)"},{"name":"min_message","doc":null,"default_value":"","external_name":"min_message","restriction":"String | ::Nil"},{"name":"max_message","doc":null,"default_value":"","external_name":"max_message","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(field, message, actual, range, min_message, max_message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Exceptions","path":"CrSerializer/Exceptions.html","kind":"module","full_name":"CrSerializer::Exceptions","name":"Exceptions","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"CrSerializer/exceptions/missing_field_exception.cr","line_number":1,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/exceptions/missing_field_exception.cr"},{"filename":"CrSerializer/exceptions/validation_exception.cr","line_number":1,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/exceptions/validation_exception.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer","kind":"module","full_name":"CrSerializer","name":"CrSerializer"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Exceptions/MissingFieldException","path":"CrSerializer/Exceptions/MissingFieldException.html","kind":"class","full_name":"CrSerializer::Exceptions::MissingFieldException","name":"MissingFieldException","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/CrSerializer/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"CrSerializer/exceptions/missing_field_exception.cr","line_number":3,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/exceptions/missing_field_exception.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Exceptions","kind":"module","full_name":"CrSerializer::Exceptions","name":"Exceptions"},"doc":"Exception thrown when an object is not valid and `raise_on_invalid` is true","summary":"<p>Exception thrown when an object is not valid and <code>raise_on_invalid</code> is true</p>","class_methods":[],"constructors":[{"id":"new(or=nil)-class-method","html_id":"new(or=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"or","doc":null,"default_value":"nil","external_name":"or","restriction":""}],"args_string":"(or = <span class=\"n\">nil</span>)","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/exceptions/missing_field_exception.cr#L4","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/exceptions/missing_field_exception.cr#L4","def":{"name":"new","args":[{"name":"or","doc":null,"default_value":"nil","external_name":"or","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(or)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Exceptions/ValidationException","path":"CrSerializer/Exceptions/ValidationException.html","kind":"class","full_name":"CrSerializer::Exceptions::ValidationException","name":"ValidationException","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/CrSerializer/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"CrSerializer/exceptions/validation_exception.cr","line_number":3,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/exceptions/validation_exception.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Exceptions","kind":"module","full_name":"CrSerializer::Exceptions","name":"Exceptions"},"doc":"Exception thrown when an object is not valid and `raise_on_invalid` is true","summary":"<p>Exception thrown when an object is not valid and <code>raise_on_invalid</code> is true</p>","class_methods":[],"constructors":[{"id":"new(validator:Validator)-class-method","html_id":"new(validator:Validator)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"validator","doc":null,"default_value":"","external_name":"validator","restriction":"Validator"}],"args_string":"(validator : Validator)","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/exceptions/validation_exception.cr#L4","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/exceptions/validation_exception.cr#L4","def":{"name":"new","args":[{"name":"validator","doc":null,"default_value":"","external_name":"validator","restriction":"Validator"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(validator)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"to_json:String-instance-method","html_id":"to_json:String-instance-method","name":"to_json","doc":"Returns a validation failed 400 JSON error for easy error handling with REST APIs\n\n```\n{\n  \"code\":    400,\n  \"message\": \"Validation tests failed\",\n  \"errors\":  [\n    \"'password' should not be blank\",\n    \"'age' should be greater than 1\",\n  ],\n}\n```","summary":"<p>Returns a validation failed 400 JSON error for easy error handling with REST APIs</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/exceptions/validation_exception.cr#L20","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/exceptions/validation_exception.cr#L20","def":{"name":"to_json","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"{code: 400, message: @message, errors: @validator.errors}.to_json"}}],"macros":[],"types":[]}]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Json","path":"CrSerializer/Json.html","kind":"module","full_name":"CrSerializer::Json","name":"Json","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"locations":[{"filename":"CrSerializer/json.cr","line_number":15,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/json.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/Blacksmoke16/CrSerializer/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer","kind":"module","full_name":"CrSerializer","name":"CrSerializer"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(pull:JSON::PullParser)-class-method","html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/json.cr#L19","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/json.cr#L19","def":{"name":"new","args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"instance = allocate\ninstance.initialize(__pull_for_json_serializable: pull)\nif instance.responds_to?(:finalize)\n  GC.add_finalizer(instance)\nend\ninstance\n"}}],"instance_methods":[{"id":"serialize:String-instance-method","html_id":"serialize:String-instance-method","name":"serialize","doc":"Serializes the object to JSON","summary":"<p>Serializes the object to JSON</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/json.cr#L66","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/json.cr#L66","def":{"name":"serialize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"{% if true %}\n      {% properties = {} of Nil => Nil %}\n      {% cann = @type.annotation(::CrSerializer::Options) %}\n      {% for ivar in @type.instance_vars %}\n        {% cr_ann = ivar.annotation(::CrSerializer::Json::Options) %}\n        {% if (cann && (cann[:exclusion_policy] == (:exclude_all))) && ((!cr_ann) || (cr_ann[:expose] != true)) %}{% else %}\n          {% if ((!cr_ann) || (cr_ann && ((cr_ann[:expose] == true) || (cr_ann[:expose] == nil)))) %}\n            {% properties[ivar.id] = {serialized_name: ((cr_ann && cr_ann[:serialized_name]) || ivar).id.stringify, emit_null: (cr_ann && (cr_ann[:emit_null] == true)) ? true : false, value: (cr_ann && cr_ann[:accessor]) ? cr_ann[:accessor] : ivar.id} %}\n          {% end %}\n        {% end %}\n      {% end %}\n      json = JSON.build do |json|\n        json.object do\n          {% for name, value in properties %}\n            json.field {{ value[:serialized_name] }}, {{ value[:value] }} {% if value[:emit_null] %}{% else %} unless {{ name.id }}.nil? {% end %}\n          {% end %}\n        end\n      end\n      json\n    {% end %}"}},{"id":"validator:CrSerializer::Validator-instance-method","html_id":"validator:CrSerializer::Validator-instance-method","name":"validator","doc":"See `Validator`","summary":"<p>See <code><a href=\"../CrSerializer/Validator.html\">Validator</a></code></p>","abstract":false,"args":[],"args_string":" : CrSerializer::Validator","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/json.cr#L24","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/json.cr#L24","def":{"name":"validator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"CrSerializer::Validator","visibility":"Public","body":"@validator"}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Validator","path":"CrSerializer/Validator.html","kind":"class","full_name":"CrSerializer::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/CrSerializer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"CrSerializer/validator.cr","line_number":2,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/validator.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer","kind":"module","full_name":"CrSerializer","name":"CrSerializer"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"assertions:Array(CrSerializer::Assertions::Assertion)-instance-method","html_id":"assertions:Array(CrSerializer::Assertions::Assertion)-instance-method","name":"assertions","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(CrSerializer::Assertions::Assertion)","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/validator.cr#L3","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/validator.cr#L3","def":{"name":"assertions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(CrSerializer::Assertions::Assertion)","visibility":"Public","body":"@assertions"}},{"id":"errors:Array(String)-instance-method","html_id":"errors:Array(String)-instance-method","name":"errors","doc":"Returns the assertions that are not valid","summary":"<p>Returns the assertions that are not valid</p>","abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/validator.cr#L11","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/validator.cr#L11","def":{"name":"errors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"assertions.reject(&.valid?).map(&.message)"}},{"id":"valid?:Bool-instance-method","html_id":"valid?:Bool-instance-method","name":"valid?","doc":"Returns true if the all the assertions are valid, otherwise false","summary":"<p>Returns true if the all the assertions are valid, otherwise false</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/validator.cr#L6","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/dafc9f0ac5a47a5a63ca48c427d33f331f40164f/src/CrSerializer/validator.cr#L6","def":{"name":"valid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"assertions.all?(&.valid?)"}}],"macros":[],"types":[]}]}]}}